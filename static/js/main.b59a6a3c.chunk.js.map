{"version":3,"sources":["helpers/randomInteger.js","helpers/getNullCell.js","helpers/shuffle.js","hoc/useGetDirection.jsx","components/Button/items/ArrowRigth.jsx","components/Button/items/ArrowLeft.jsx","components/Button/items/Update.jsx","components/Button/index.jsx","components/Tools/index.jsx","helpers/getDirection.js","components/Tile/index.jsx","components/Matrix/index.jsx","components/Modal/index.jsx","consts/matrix.js","containers/WinnerDialog/index.jsx","components/Board/index.jsx","components/NewGame/index.jsx","containers/Board/Board.jsx","containers/Board/index.jsx","actions/index.js","types/index.js","App.js","serviceWorker.js","helpers/getMovePosition.js","reducers/game.js","reducers/index.js","store.js","index.js","static/button.svg","static/numberBackground.svg","static/close.svg","static/board.svg","static/gamebackground.jpg"],"names":["randomInteger","min","max","rand","Math","random","round","getNullCell","numbers","obj","i","length","j","nullLine","nullColumn","getMovePosition","size","left","right","top","bottom","columnMod","abs","lineMod","directionKeys","newDirections","map","item","newDirection","forEach","key","filter","randDirection","shuffle","updatedNumbers","_toConsumableArray","shuffleCount","_getNullCell","_getMovePosition","_getMovePosition2","_slicedToArray","newLine","newCol","temp","useTouchMovement","move","touchStartX","touchStartY","_useState","useState","moveDirection","_useState2","direction","setDirection","onTouchStart","e","touches","clientX","clientY","onTouchEnd","touchEndX","changedTouches","touchEndY","dX","dY","absX","absY","onKeyDown","keyCode","useEffect","window","addEventListener","removeEventListener","TouchHoc","ChildrenComponents","props","React","createElement","ArrowRight","xmlns","width","height","viewBox","id","data-name","d","transform","fill","ArrowLeft","UpdateButton","ButtonWrap","styled","div","_templateObject","ButtonBg","Button","_ref","onClick","name","items","ToolsWrapper","Tools","newGame","prevStep","nextStep","getDirection","movable","nullable","lineM","columnM","lineN","columnN","TileWrapper","motion","Square","_templateObject2","numberBackground","Tile","memo","x","y","number","line","column","animate","transition","type","getStyles","memoize","boardSize","index","floor","Matrix","matrix","useMemo","newArray","child","el","push","style","Close","_templateObject3","MATRIX","connect","state","game","isStarted","counter","win","setWin","isEqual","parent","postMessage","status","numberOfAttempts","data","Fragment","BoardContainer","BoardImage","FullContainer","Background","MatrixWrapper","NewGame","Board","prev","next","startNewGame","ref","useRef","sizes","setSizes","updateSizes","current","clientWidth","quarter","onMove","useCallback","tabIndex","WinnerDialog","_state$game","steps","dispatch","ownProps","payload","moveTile","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","console","getPosition","nullPosition","updateMatrix","_ref2","newMatrix","initialStateFromCookie","read_cookie","initialState","isEmpty","arguments","undefined","action","_getPosition","_getPosition2","newState","_objectSpread","concat","log","bake_cookie","delete_cookie","lastIndex","nextIndex","position","prevIndex","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","MOUNT_NODE","document","getElementById","Error","ReactDOM","render","Provider","App","URL","process","href","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b59a6a3c.chunk.js","sourcesContent":["// @flow\nconst randomInteger = (min: number, max: number) => {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  rand = Math.round(rand);\n  return rand;\n};\n\nexport default randomInteger;\n","// @flow\nimport type { GameMatrix, NullCell } from '../types';\n\nconst getNullCell = (numbers: GameMatrix): NullCell => {\n  let obj = {};\n  for (let i = 0; i < numbers.length; i += 1) {\n    for (let j = 0; j < numbers[i].length; j += 1) {\n      if (numbers[i][j] === 0) {\n        obj = {\n          nullLine: i,\n          nullColumn: j,\n        };\n      }\n    }\n  }\n  return obj;\n};\n\nexport default getNullCell;\n","// @flow\nimport randomInteger from './randomInteger';\nimport getNullCell from './getNullCell';\n\nconst getMovePosition = (\n  nullLine: number,\n  nullColumn: number,\n  size: [number, number],\n) => {\n  let left = true;\n  let right = true;\n  let top = true;\n  let bottom = true;\n  const columnMod = Math.abs(nullColumn - size[0]);\n  const lineMod = Math.abs(nullLine - size[1]);\n\n  if (nullLine === 0) {\n    top = false;\n  }\n  if (nullColumn === 0) {\n    left = false;\n  }\n  if (lineMod === 0) {\n    bottom = false;\n  }\n  if (columnMod === 0) {\n    right = false;\n  }\n  if (nullLine === 0 && nullColumn === 0) {\n    top = false;\n    left = false;\n  }\n  if (columnMod === 0 && lineMod === 0) {\n    bottom = false;\n    right = false;\n  }\n  if (nullLine === 0 && columnMod === 0) {\n    top = false;\n    right = false;\n  }\n  if (nullColumn === 0 && lineMod === 0) {\n    bottom = false;\n    left = false;\n  }\n\n  // filter directions, which are not true\n  const directionKeys = ['right', 'top', 'bottom', 'left'];\n  const directions = [{ top }, { right }, { bottom }, { left }];\n  const newDirections = directions\n    .map(item => {\n      let newDirection = null;\n      directionKeys.forEach(key => {\n        // $FlowFixMe\n        if (item[key]) newDirection = key;\n      });\n      return newDirection;\n    })\n    .filter(item => item !== null);\n\n  const randDirectionIndex = randomInteger(0, newDirections.length - 1);\n  const randDirection = newDirections[randDirectionIndex];\n\n  // getPosition\n  if (randDirection === 'top') return [nullLine - 1, nullColumn];\n  if (randDirection === 'right') return [nullLine, nullColumn + 1];\n  if (randDirection === 'left') return [nullLine, nullColumn - 1];\n  if (randDirection === 'bottom') return [nullLine + 1, nullColumn];\n\n  return [];\n};\n\nconst shuffle = (numbers: Array<Array<number>>, size: [number, number]) => {\n  const updatedNumbers = [...numbers];\n  const shuffleCount = randomInteger(150, 200);\n  for (let i = 0; i < shuffleCount; i += 1) {\n    const { nullLine, nullColumn } = getNullCell(numbers);\n    const [newLine, newCol] = getMovePosition(nullLine, nullColumn, size);\n    const temp = numbers[nullLine][nullColumn];\n    updatedNumbers[nullLine][nullColumn] = numbers[newLine][newCol];\n    updatedNumbers[newLine][newCol] = temp;\n  }\n\n  return updatedNumbers;\n};\n\nexport default shuffle;\n","// @flow\nimport React, { useEffect, useState } from 'react';\nimport type { GameMatrix } from '../types';\n\nconst useTouchMovement = (move: string => GameMatrix) => {\n  const [direction, setDirection] = useState({ moveDirection: '' });\n  let touchStartX;\n  let touchStartY;\n\n  const onTouchStart = e => {\n    touchStartX = e.touches[0].clientX;\n    touchStartY = e.touches[0].clientY;\n  };\n  const onTouchEnd = e => {\n    const touchEndX = e.changedTouches[0].clientX;\n    const touchEndY = e.changedTouches[0].clientY;\n\n    const dX = touchEndX - touchStartX;\n    const dY = touchEndY - touchStartY;\n\n    const absX = Math.abs(dX);\n    const absY = Math.abs(dY);\n\n    if (Math.max(absX, absY) > 10) {\n      let newDirection = '';\n      if (absX > absY) {\n        newDirection = dX > 0 ? 'right' : 'left';\n      } else {\n        newDirection = dY > 0 ? 'bottom' : 'top';\n      }\n\n      setDirection({\n        moveDirection: newDirection,\n      });\n    }\n  };\n\n  const onKeyDown = e => {\n    let newDirection = '';\n    const { keyCode } = e;\n    switch (keyCode) {\n      case 38:\n      case 87:\n        newDirection = 'top';\n        break;\n      case 40:\n      case 83:\n        newDirection = 'bottom';\n        break;\n      case 37:\n      case 65:\n        newDirection = 'left';\n        break;\n      case 39:\n      case 68:\n        newDirection = 'right';\n        break;\n      default:\n        newDirection = '';\n        break;\n    }\n\n    setDirection({ moveDirection: newDirection });\n  };\n\n  const listenEvents = () => {\n    window.addEventListener('touchstart', onTouchStart);\n    window.addEventListener('touchend', onTouchEnd);\n    window.addEventListener('keydown', onKeyDown);\n  };\n\n  const removeEvents = () => {\n    window.removeEventListener('touchstart', onTouchStart);\n    window.removeEventListener('touchend', onTouchEnd);\n    window.removeEventListener('keydown', onKeyDown);\n  };\n\n  useEffect(() => {\n    listenEvents();\n    return () => removeEvents();\n  });\n\n  useEffect(() => {\n    move(direction.moveDirection);\n  }, [direction]);\n};\n\ntype Props = {\n  move: string => GameMatrix,\n};\n\nconst TouchHoc = (ChildrenComponents: React$ComponentType<any>) => (\n  props: Props,\n) => {\n  const { move } = props;\n  useTouchMovement(move);\n  return <ChildrenComponents {...props} />;\n};\n\nexport default TouchHoc;\n","// @flow\nimport React from 'react';\n\nconst ArrowRight = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"22.876\"\n    height=\"28.629\"\n    viewBox=\"0 0 22.876 28.629\"\n  >\n    <path\n      id=\"Path_1507\"\n      data-name=\"Path 1507\"\n      d=\"M194.827,132.3c-.669.835-.841,25.783.42,28.089s21.727-10.1,21.937-14.506S196.509,130.2,194.827,132.3Z\"\n      transform=\"translate(-194.311 -132.039)\"\n      fill=\"#eed8a6\"\n    />\n  </svg>\n);\n\nexport default ArrowRight;\n","// @flow\nimport React from 'react';\n\nconst ArrowLeft = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"22.843\"\n    height=\"28.66\"\n    viewBox=\"0 0 22.843 28.66\"\n  >\n    <path\n      id=\"Path_1507\"\n      data-name=\"Path 1507\"\n      d=\"M216.637,132.3c.668.836.839,25.811-.42,28.12s-21.7-10.116-21.905-14.522S214.958,130.2,216.637,132.3Z\"\n      transform=\"translate(-194.311 -132.039)\"\n      fill=\"#eed8a6\"\n    />\n  </svg>\n);\n\nexport default ArrowLeft;\n","// @flow\nimport React from 'react';\n\nconst UpdateButton = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"39.476\"\n    height=\"38.389\"\n    viewBox=\"0 0 39.476 38.389\"\n  >\n    <g\n      id=\"Group_11668\"\n      data-name=\"Group 11668\"\n      transform=\"translate(-568.374 -485.362)\"\n    >\n      <g\n        id=\"Group_4877\"\n        data-name=\"Group 4877\"\n        transform=\"translate(568.374 485.362)\"\n      >\n        <path\n          id=\"Path_1507\"\n          data-name=\"Path 1507\"\n          d=\"M10.265.118c.307.384.386,11.868-.193,12.929S.1,8.4,0,6.37,9.494-.846,10.265.118Z\"\n          transform=\"matrix(0.788, -0.616, 0.616, 0.788, 0, 11.189)\"\n          fill=\"#eed8a6\"\n        />\n        <path\n          id=\"Path_112289\"\n          data-name=\"Path 112289\"\n          d=\"M.015,5.516C-.3,5.8,4.566,7.78,5.068,14.3c.31,5.917-3.685,9.029-3.448,9.562.475,1.069,5.989,4.076,6.583,3.363a23.762,23.762,0,0,0,3.976-7.95,19.33,19.33,0,0,0-1.03-11.769C9.479,3.23,5.316.575,5.024.137,4.311-.932,1.084,4.566.015,5.516Z\"\n          transform=\"translate(7.766 12.11) rotate(-73)\"\n          fill=\"#eed8a6\"\n        />\n      </g>\n      <g\n        id=\"Group_4878\"\n        data-name=\"Group 4878\"\n        transform=\"translate(570.242 502.178)\"\n      >\n        <path\n          id=\"Path_1507-2\"\n          data-name=\"Path 1507\"\n          d=\"M10.265.118c.307.384.386,11.868-.193,12.929S.1,8.4,0,6.37,9.494-.846,10.265.118Z\"\n          transform=\"matrix(-0.788, 0.616, -0.616, -0.788, 37.608, 10.384)\"\n          fill=\"#eed8a6\"\n        />\n        <path\n          id=\"Path_112289-2\"\n          data-name=\"Path 112289\"\n          d=\"M.015,5.516C-.3,5.8,4.566,7.78,5.068,14.3c.31,5.917-3.685,9.029-3.448,9.562.475,1.069,5.989,4.076,6.583,3.363a23.762,23.762,0,0,0,3.976-7.95,19.331,19.331,0,0,0-1.03-11.769C9.479,3.23,5.316.575,5.024.137,4.311-.932,1.084,4.566.015,5.516Z\"\n          transform=\"translate(29.842 9.464) rotate(107)\"\n          fill=\"#eed8a6\"\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default UpdateButton;\n","// @flow\nimport React, { createElement } from 'react';\nimport styled from 'styled-components';\nimport * as items from './items';\nimport ButtonBg from '../../static/button.svg';\n\nconst ButtonWrap = styled.div`\n  background-image: url(${ButtonBg});\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-size: contain;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-right: 5px;\n  margin-left: 5px;\n`;\n\ntype Props = {\n  onClick: () => void,\n  name: string,\n};\n\nconst Button = ({ onClick, name }: Props) => (\n  <ButtonWrap onClick={onClick}>{createElement(items[name])}</ButtonWrap>\n);\n\nexport default Button;\n","// @flow\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\n\nconst ToolsWrapper = styled.div`\n  display: flex;\n`;\n\ntype Props = {\n  newGame: () => void,\n  nextStep: () => void,\n  prevStep: () => void,\n};\n\nconst Tools = ({ newGame, prevStep, nextStep }: Props) => (\n  <ToolsWrapper>\n    <Button onClick={newGame} name=\"Update\" />\n    <Button onClick={prevStep} name=\"ArrowLeft\" />\n    <Button onClick={nextStep} name=\"ArrowRight\" />\n  </ToolsWrapper>\n);\n\nexport default Tools;\n","// @flow\nconst getDirection = (movable: Object, nullable: Object) => {\n  const { lineM, columnM } = movable;\n  const { lineN, columnN } = nullable;\n  if (lineM === lineN + 1 && columnM === columnN) {\n    return 'top';\n  }\n  if (lineM === lineN - 1 && columnM === columnN) {\n    return 'bottom';\n  }\n  if (lineM === lineN && columnM === columnN - 1) {\n    return 'right';\n  }\n  if (lineM === lineN && columnM === columnN + 1) {\n    return 'left';\n  }\n  return '';\n};\n\nexport default getDirection;\n","// @flow\nimport React, { memo } from 'react';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport numberBackground from '../../static/numberBackground.svg';\n\nconst TileWrapper = styled(motion.div)`\n  position: absolute;\n  z-index: 1;\n  background: #fff;\n  border-radius: 10px;\n  padding: 5px;\n  background: transparent;\n  cursor: pointer;\n  width: calc((100%) / 4);\n  height: calc((100%) / 4);\n`;\n\nconst Square = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Coming Soon', sans-serif;\n  font-size: 35px;\n  line-height: 35px;\n  z-index: 1;\n  border-radius: 5px;\n  width: 100%;\n  height: 100%;\n  background-image: url(${numberBackground});\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  @media (max-width: 400px) {\n    font-size: 30px;\n    line-height: 30px;\n  }\n`;\n\ntype Props = {\n  move: (line: number, column: number) => void,\n  x: number,\n  y: number,\n  line: number,\n  column: number,\n  number: number,\n};\n\nconst Tile = memo<Props>(({ x, y, number, line, column, move }: Props) => {\n  if (number === 0) {\n    return null;\n  }\n  return (\n    <TileWrapper\n      animate={{\n        x,\n        y,\n      }}\n      transition={{ type: 'tween' }}\n      onClick={() => move(line, column)}\n    >\n      <Square key={number}>{number}</Square>\n    </TileWrapper>\n  );\n});\n\nexport default Tile;\n","// @flow\nimport React, { useMemo, memo } from 'react';\nimport memoize from 'memoize-one';\nimport Tile from '../Tile';\nimport type { GameMatrix } from '../../types';\n\nconst getStyles = memoize(\n  (boardSize: number, width: number, height: number, index: number) => ({\n    x: boardSize * (width / boardSize) * (index % 4),\n    y: boardSize * (height / boardSize) * Math.floor(index / 4),\n  }),\n);\n\ntype Props = {\n  matrix: GameMatrix,\n  width: number,\n  height: number,\n  boardSize: number,\n  move: (line: number, column: number) => void,\n};\n\nconst Matrix = memo<Props>(\n  ({ matrix, width, height, boardSize, move }: Props) => {\n    const matrixArr = useMemo(() => {\n      const newArray = [];\n      matrix.forEach((item, line) => {\n        item.forEach((child, column) => {\n          const el = {\n            number: child,\n            line,\n            column,\n          };\n          newArray.push(el);\n        });\n      });\n\n      return newArray;\n    }, [matrix]);\n\n    // $FlowFixMe\n    const tiles = matrixArr.map((item, index) => {\n      const style = getStyles(boardSize, width, height, index);\n\n      return (\n        <Tile\n          x={style.x}\n          y={style.y}\n          number={item.number}\n          line={item.line}\n          column={item.column}\n          move={move}\n          key={item.number}\n        />\n      );\n    });\n\n    return tiles;\n  },\n);\n\nexport default Matrix;\n","// @flow\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport useOnClickOutside from 'use-onclickoutside';\nimport Close from '../../static/close.svg';\n\nconst ModalWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 20;\n  height: 100vh;\n  width: 100%;\n`;\n\nconst CloseButton = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 15px;\n  height: 15px;\n  background: url(${Close});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n  cursor: pointer;\n  max-width: 80%;\n`;\n\nconst Content = styled.div`\n  position: relative;\n  font-size: 30px;\n  padding: 20px 40px;\n  z-index: 100;\n  border-radius: 10px;\n  background: #fff;\n  max-width: 80%;\n`;\n\ntype Props = {\n  children: React$Node,\n  onClose: () => void,\n};\n\nconst Modal = ({ children, onClose }: Props) => {\n  const modalRef = useRef(null);\n  useOnClickOutside(modalRef, onClose);\n  return (\n    <ModalWrapper>\n      <Content ref={modalRef}>{children}</Content>\n    </ModalWrapper>\n  );\n};\n\nexport default Modal;\n","// @flow\nexport const MATRIX = [\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9, 10, 11, 12],\n  [13, 14, 15, 0],\n];\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport isEqual from 'lodash/isEqual';\nimport Modal from '../../components/Modal';\nimport { MATRIX } from '../../consts/matrix';\nimport type { GameMatrix } from '../../types';\n\ntype Props = {\n  matrix: GameMatrix,\n  isStarted: boolean,\n  newGame: () => void,\n  counter: number,\n};\n\nconst WinnerDialog = ({ matrix, isStarted, newGame, counter }: Props) => {\n  const [win, setWin] = useState(false);\n\n  useEffect(() => {\n    newGame();\n    return newGame();\n  }, []);\n\n  useEffect(() => {\n    setWin(isEqual(matrix, MATRIX));\n  }, [matrix]);\n\n  useEffect(() => {\n    window.parent.postMessage(\n      { status: 'started', numberOfAttempts: counter },\n      '*',\n    );\n  }, [counter]);\n\n  useEffect(() => {\n    if (win) {\n      window.parent.postMessage(\n        { status: 'finished', numberOfAttempts: counter },\n        '*',\n      );\n    }\n  }, [win]);\n\n  useEffect(() => {\n    window.addEventListener('message', data => {\n      if (data.data.type === 'NEW_GAME') {\n        newGame();\n      }\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      {/* {win && isStarted ? (\n        <Fragment>\n          <Modal\n            onClose={() => {\n              setWin(false);\n              newGame();\n            }}\n          >\n            Congratulation! You are winner!!!\n            <h6>Click to restart game</h6>\n            <div />\n          </Modal>\n        </Fragment>\n      ) : null} */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  matrix: state.game.matrix,\n  isStarted: state.game.isStarted,\n  counter: state.game.counter,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(WinnerDialog);\n","import styled from 'styled-components';\nimport BoardImage from '../../static/board.svg';\nimport Background from '../../static/gamebackground.jpg';\n\nexport const BoardContainer = styled.div`\n  position: relative;\n  width: 400px;\n  height: 400px;\n  padding: 25px;\n  background-image: url(${BoardImage});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center center;\n  margin-bottom: 20px;\n  box-sizing: border-box;\n\n  @media (max-width: 768px) {\n    max-width: 300px;\n    width: 100%;\n    max-height: 300px;\n    height: 100%;\n    padding: 20px;\n    background-position: center center;\n  }\n\n  @media (max-height: 500px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const FullContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  overflow-y: hidden;\n  flex-direction: column;\n  background-image: url(${Background});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  align-items: center;\n\n  @media (max-height: 500px) {\n    flex-direction: row;\n  }\n`;\n\nexport const MatrixWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  touch-action: none;\n`;\n","import styled from 'styled-components';\n\nexport const NewGame = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 30px;\n  background: #000;\n  color: #fff;\n  cursor: pointer;\n`;\n","// @flow\nimport React, {\n  Fragment,\n  useRef,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\nimport Tools from '../../components/Tools';\nimport type { GameMatrix } from '../../types';\nimport getNullCell from '../../helpers/getNullCell';\nimport getDirection from '../../helpers/getDirection';\nimport Matrix from '../../components/Matrix';\nimport WinnerDialog from '../WinnerDialog';\nimport {\n  BoardContainer,\n  FullContainer,\n  MatrixWrapper,\n} from '../../components/Board';\nimport { NewGame } from '../../components/NewGame';\n\ntype Props = {\n  startNewGame: () => void,\n  next: () => void,\n  prev: () => void,\n  move: string => GameMatrix,\n  isStarted: boolean,\n  direction: string,\n  numbers: GameMatrix,\n};\n\nconst Board = ({\n  numbers,\n  move,\n  prev,\n  next,\n  startNewGame,\n  isStarted,\n  direction,\n}: Props) => {\n  const ref = useRef(null);\n  const [sizes, setSizes] = useState({\n    width: 0,\n    height: 0,\n    boardSize: 0,\n  });\n\n  useEffect(() => {\n    const updateSizes = () => {\n      const { current } = ref;\n      if (current && current.clientWidth) {\n        const quarter = current.clientWidth / 4;\n        setSizes({\n          boardSize: current.clientWidth,\n          width: quarter,\n          height: quarter,\n        });\n      }\n    };\n    updateSizes();\n\n    window.addEventListener('resize', updateSizes);\n    return () => {\n      window.removeEventListener('resize', updateSizes);\n    };\n  }, []);\n\n  const onMove = useCallback((line, column) => {\n    const { nullLine, nullColumn } = getNullCell(numbers);\n    const movable = {\n      lineM: line,\n      columnM: column,\n    };\n    const nullable = {\n      lineN: nullLine,\n      columnN: nullColumn,\n    };\n    move(getDirection(movable, nullable));\n  }, []);\n\n  const { boardSize, width, height } = sizes;\n  return (\n    <FullContainer tabIndex=\"0\">\n      <BoardContainer size={boardSize}>\n        <MatrixWrapper ref={ref}>\n          {isStarted ? (\n            <Fragment>\n              {width && height && boardSize && (\n                <Matrix\n                  width={width}\n                  height={height}\n                  boardSize={boardSize}\n                  matrix={numbers}\n                  move={onMove}\n                  direction={direction}\n                />\n              )}\n            </Fragment>\n          ) : (\n            <NewGame onClick={startNewGame}>New Game</NewGame>\n          )}\n        </MatrixWrapper>\n      </BoardContainer>\n      <Tools newGame={startNewGame} prevStep={prev} nextStep={next} />\n      <WinnerDialog newGame={startNewGame} />\n    </FullContainer>\n  );\n};\n\nexport default Board;\n","import { connect } from 'react-redux';\nimport shuffle from '../../helpers/shuffle';\nimport TouchHoc from '../../hoc/useGetDirection';\nimport Board from './Board';\nimport { moveTile, newGame, nextStep, prevStep } from '../../actions';\n\nconst mapStateToProps = state => {\n  const { counter, steps, isStarted } = state.game;\n\n  return {\n    counter,\n    steps,\n    isStarted,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  move: direction => {\n    direction && dispatch(moveTile(direction));\n  },\n  startNewGame: () =>\n    dispatch(newGame(shuffle(ownProps.numbers, ownProps.size))),\n  next: () => dispatch(nextStep()),\n  prev: () => dispatch(prevStep()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TouchHoc(Board));\n","// @flow\nimport type { GameMatrix } from '../types';\nimport { MOVE_TILE, NEW_GAME, NEXT_STEP, PREV_STEP } from '../types';\n\nexport const newGame = (numbers: GameMatrix) => ({\n  type: NEW_GAME,\n  payload: numbers,\n});\n\nexport const moveTile = (direction: string) => ({\n  type: MOVE_TILE,\n  payload: direction,\n});\n\nexport const nextStep = () => ({\n  type: NEXT_STEP,\n});\n\nexport const prevStep = () => ({\n  type: PREV_STEP,\n});\n","// @flow\nexport type GameMatrix = Array<Array<number>>;\nexport const NEW_GAME: 'NEW_GAME' = 'NEW_GAME';\nexport const MOVE_TILE: 'MOVE_TILE' = 'MOVE_TILE';\nexport const NEXT_STEP: 'NEXT_STEP' = 'NEXT_STEP';\nexport const PREV_STEP: 'PREV_STEP' = 'PREV_STEP';\n\nexport type GameState = {\n  matrix: GameMatrix,\n  counter: number,\n  index: number,\n  steps: Array<{ line: number, column: number }>,\n  size: [number, number],\n};\n\nexport type NullCell = {\n  nullLine: number,\n  nullColumn: number,\n};\n\nexport type NewGameAction = {\n  type: typeof NEW_GAME,\n  payload: GameMatrix,\n};\n\nexport type MoveTileAction = {\n  type: typeof MOVE_TILE,\n  payload: string,\n};\n\nexport type NextStepAction = {\n  type: typeof NEXT_STEP,\n};\n\nexport type PrevStepAction = {\n  type: typeof PREV_STEP,\n};\n\nexport type Actions =\n  | NewGameAction\n  | MoveTileAction\n  | NextStepAction\n  | PrevStepAction;\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Board from './containers/Board';\nimport './App.css';\n\nconst App = props => <Board {...props} />;\n\nconst mapStateToProps = state => ({\n  numbers: state.game.matrix,\n  size: state.game.size,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line no-console\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\nconst getPosition = (direction: string, nullPosition: Object) => {\n  const { nullLine, nullColumn } = nullPosition;\n\n  switch (direction) {\n    case 'top':\n      return [nullLine + 1, nullColumn];\n    case 'bottom':\n      return [nullLine - 1, nullColumn];\n    case 'left':\n      return [nullLine, nullColumn + 1];\n    case 'right':\n      return [nullLine, nullColumn - 1];\n    default:\n      return [nullLine, nullColumn];\n  }\n};\n\nexport default getPosition;\n","// @flow\nimport isEmpty from 'lodash/isEmpty';\n// eslint-disable-next-line camelcase\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\nimport { MOVE_TILE, NEW_GAME, NEXT_STEP, PREV_STEP } from '../types';\nimport getNullCell from '../helpers/getNullCell';\nimport getPosition from '../helpers/getMovePosition';\nimport { MATRIX } from '../consts/matrix';\nimport shuffle from '../helpers/shuffle';\nimport type { Actions, GameState } from '../types';\n\nconst updateMatrix = (matrix, { nullLine, nullColumn }, { line, column }) => {\n  const newMatrix = [...matrix];\n  const columnMod = Math.abs(column - nullColumn);\n  const lineMod = Math.abs(line - nullLine);\n\n  if (\n    (line === nullLine && columnMod === 1) ||\n    (column === nullColumn && lineMod === 1)\n  ) {\n    const temp = newMatrix[nullLine][nullColumn];\n    newMatrix[nullLine][nullColumn] = newMatrix[line][column];\n    newMatrix[line][column] = temp;\n  }\n\n  return newMatrix;\n};\n\nconst initialStateFromCookie = read_cookie('puzzle15');\n\nconst initialState = !isEmpty(initialStateFromCookie)\n  ? initialStateFromCookie\n  : {\n      matrix: shuffle(MATRIX.map((item: Array<number>) => [...item]), [3, 3]),\n      isStarted: false,\n      steps: [],\n      size: [3, 3],\n      index: 0,\n      counter: 0,\n    };\n\nconst game = (state: GameState = initialState, action: Actions) => {\n  switch (action.type) {\n    case MOVE_TILE: {\n      const direction = action.payload;\n      const { index, counter, matrix, steps, size } = state;\n      const nullPosition = getNullCell(matrix);\n      const [line, column] = getPosition(direction, nullPosition);\n\n      if (line < 0 || column < 0 || line > size[0] || column > size[1]) {\n        return state;\n      }\n\n      const newMatrix = updateMatrix(matrix, nullPosition, { line, column });\n      const newState = {\n        ...state,\n        matrix: newMatrix,\n        counter: counter + 1,\n        index: index + 1,\n        steps: [...steps, { line, column }],\n      };\n\n      console.log('movetile');\n\n      bake_cookie('puzzle15', newState);\n\n      return newState;\n    }\n\n    case NEW_GAME: {\n      const { matrix } = state;\n      const newMatrix = action.payload;\n      const { nullLine, nullColumn } = getNullCell(matrix);\n      const newState = {\n        ...state,\n        matrix: [...newMatrix],\n        counter: 0,\n        isStarted: true,\n        index: 0,\n        steps: [\n          {\n            line: nullLine,\n            column: nullColumn,\n          },\n        ],\n      };\n\n      delete_cookie('puzzle15');\n      return newState;\n    }\n\n    case NEXT_STEP: {\n      const { index, steps, matrix } = state;\n      const lastIndex = steps.length > 0 ? steps.length - 1 : 0;\n      const nextIndex = index < lastIndex ? index + 1 : lastIndex;\n      const nullPosition = getNullCell(matrix);\n      const position = steps[nextIndex];\n\n      const newMatrix = updateMatrix(matrix, nullPosition, position);\n\n      const newState = {\n        ...state,\n        matrix: newMatrix,\n        index: index < steps.length - 1 ? index + 1 : steps.length - 1,\n      };\n\n      bake_cookie('puzzle15', newState);\n      return newState;\n    }\n    case PREV_STEP: {\n      const { index, steps, matrix } = state;\n      const prevIndex = index > 0 ? index - 1 : 0;\n      const position = steps[prevIndex];\n\n      const nullPosition = getNullCell(matrix);\n      const newMatrix = updateMatrix(matrix, nullPosition, position);\n\n      const newState = {\n        ...state,\n        matrix: newMatrix,\n        index: prevIndex,\n      };\n\n      bake_cookie('puzzle15', newState);\n\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default game;\n","// @flow\nimport { combineReducers } from 'redux';\nimport game from './game';\n\nconst rootReducer = combineReducers({\n  game,\n});\n\nexport default rootReducer;\n","// @flow\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store';\n\nconst MOUNT_NODE = document.getElementById('root');\n\nif (MOUNT_NODE) {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    MOUNT_NODE,\n  );\n} else {\n  throw new Error('#app element does not exist');\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/button.9203b416.svg\";","module.exports = __webpack_public_path__ + \"static/media/numberBackground.d63d02fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.885ded44.svg\";","module.exports = __webpack_public_path__ + \"static/media/board.0df52569.svg\";","module.exports = __webpack_public_path__ + \"static/media/gamebackground.8378e863.jpg\";"],"sourceRoot":""}